plugins {
    id 'java'
    id 'org.jetbrains.kotlin.jvm'

    id 'org.springframework.boot' version '3.2.3'
    id 'io.spring.dependency-management' version '1.1.4'
    id 'org.jetbrains.kotlin.plugin.spring' version '1.9.22'
    id "com.github.johnrengelman.shadow" version "7.1.2"
    id 'com.google.devtools.ksp' version "1.9.23-1.0.19"
}

group = 'com.github.ryuzu'
version = '1.0.0'

repositories {
    mavenCentral()
    maven {
        name = "papermc-repo"
        url = "https://repo.papermc.io/repository/maven-public/"
    }
    maven {
        name = "sonatype"
        url = "https://oss.sonatype.org/content/groups/public/"
    }
    maven {
        name = "jitpack"
        url = "https://jitpack.io/"
    }
    maven {
        name = "placeholderapi"
        url = 'https://repo.extendedclip.com/content/repositories/placeholderapi/'
    }
    maven {
        name = "protocollib"
        url = 'https://repo.dmulloy2.net/repository/public/'
    }
    maven {
        name = "fren_gor"
        url = "https://nexus.frengor.com/repository/public/"
    }
    maven {
        name = "oraxen"
        url = "https://repo.oraxen.com/releases"
    }
    maven {
        name = 'alessiodp-repo'
        url = 'https://repo.alessiodp.com/releases/'
    }
    maven {
        name = "code-mc"
        url = "https://repo.codemc.io/repository/maven-public/"
    }
//    maven {
//        name = "bkcommonlib"
//        url = 'https://ci.mg-dev.eu/plugin/repository/everything'
//    }
    maven {
        name = "worldguard"
        url = 'https://maven.enginehub.org/repo/'
    }
    maven {
        name = "mythic-mobs"
        url = 'https://mvn.lumine.io/repository/maven-public/'
    }
    maven {
        name = "papi"
        url = 'https://repo.extendedclip.com/content/repositories/placeholderapi/'
    }
    maven {
        name = "spigot-update-checker"
        url = "https://repo.jeff-media.com/public/"
    }
    maven {
        name = "multi-verse"
        url = "https://repo.onarandombox.com/content/groups/public/"
    }
}

dependencies {
    compileOnly "io.papermc.paper:paper-api:1.20.4-R0.1-SNAPSHOT"
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8"
    implementation 'org.jetbrains.kotlin:kotlin-reflect'
    implementation 'org.reflections:reflections:0.10.2'

    implementation "io.insert-koin:koin-core:3.5.3"
    implementation "io.insert-koin:koin-annotations:1.3.1"
    implementation "io.insert-koin:koin-ksp-compiler:1.3.1"

    implementation("com.fasterxml.jackson.module:jackson-module-kotlin:2.16.0")
    implementation("com.fasterxml.jackson.dataformat:jackson-dataformat-yaml:2.17.0")
    implementation("org.jetbrains.kotlinx:kotlinx-serialization-json:1.6.3")

    implementation 'org.springframework.boot:spring-boot-starter-data-mongodb'
    implementation 'org.springframework.boot:spring-boot-starter-data-redis'

    implementation 'com.github.hakan-krgn.spigot-injection:injection-core:0.1.5.1'
    implementation 'com.github.hakan-krgn.spigot-injection:injection-listener:0.1.5.1'
    implementation 'com.github.hakan-krgn.spigot-injection:injection-command:0.1.5.1'

    implementation("com.jeff_media:SpigotUpdateChecker:3.0.3")
    implementation 'com.github.stefvanschie.inventoryframework:IF:0.10.13'
    implementation 'com.cjcrafter:weaponmechanics:3.3.0'

    implementation "com.github.megavexnetwork.scoreboard-library:scoreboard-library-api:2.1.3"
    runtimeOnly "com.github.megavexnetwork.scoreboard-library:scoreboard-library-implementation:2.1.3"
    implementation "com.github.megavexnetwork.scoreboard-library:scoreboard-library-extra-kotlin:2.1.3"

    compileOnly 'io.th0rgal:oraxen:1.170.0'
    compileOnly 'me.clip:placeholderapi:2.11.5'
    compileOnly 'com.comphenix.protocol:ProtocolLib:5.1.0'
    compileOnly 'com.frengor:ultimateadvancementapi:2.2.8'
    compileOnly 'io.lumine:Mythic-Dist:5.3.5'
    compileOnly 'com.ticxo.modelengine:ModelEngine:R4.0.4'
    compileOnly 'me.clip:placeholderapi:2.11.5'
    compileOnly 'com.sk89q.worldguard:worldguard-bukkit:7.0.9'
    compileOnly 'com.onarandombox.multiversecore:multiverse-core:4.3.12'
    implementation(platform("com.intellectualsites.bom:bom-newest:1.42"))
    compileOnly("com.fastasyncworldedit:FastAsyncWorldEdit-Core")

    //    compileOnly 'com.alessiodp.parties:parties-api:3.2.15'
    //    compileOnly 'com.bergerkiller.bukkit:BKCommonLib:1.20.4-v1'
}

def targetJavaVersion = 17
java {
    def javaVersion = JavaVersion.toVersion(targetJavaVersion)
    if (JavaVersion.current() < javaVersion) {
        toolchain.languageVersion = JavaLanguageVersion.of(targetJavaVersion)
    }
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8'

    if (targetJavaVersion >= 10 || JavaVersion.current().isJava10Compatible()) {
        options.release.set(targetJavaVersion)
    }
}

processResources {
    def props = [version: version]
    inputs.properties props
    filteringCharset 'UTF-8'
    filesMatching('paper-plugin.yml') {
        expand props
    }
}
kotlin {
    jvmToolchain(17)
}

tasks.named('test') {
    useJUnitPlatform()
}

configurations.all {
    resolutionStrategy.eachDependency { DependencyResolveDetails details ->
        println("The dependency: ${details.requested} is resolved to version: ${details.getTarget().version}")
    }
}

sourceSets.main {
    java.srcDirs("build/generated/ksp/main/kotlin")
}

tasks.findByName('shadowJar')?.configure {
    relocate 'com.jeff_media', 'com.github.ryuzu.lib'
}

bootJar {
    mainClass = 'com.github.ryuzu.ryuzutechnicalmagiccore.RyuZUTechnicalMagicCore'
}